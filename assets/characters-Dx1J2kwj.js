import"./navigation-DTsS0dMv.js";import"./hpApi-l0sNRNKZ.js";class r{constructor(){this.loadingElement=document.getElementById("loading"),this.errorElement=document.getElementById("error"),this.container=document.getElementById("characters-container"),this.loadMoreContainer=document.getElementById("load-more-container"),this.loadMoreBtn=document.getElementById("load-more-btn"),this.modal=document.getElementById("character-modal"),this.modalOverlay=document.getElementById("modal-overlay"),this.allCharacters=[],this.currentIndex=0,this.charactersPerPage=12,this.photoCache=new Map,this.initEvents()}initEvents(){this.loadMoreBtn&&this.loadMoreBtn.addEventListener("click",()=>{this.loadMoreCharacters()}),this.modal&&(this.modal.querySelector(".cross").addEventListener("click",()=>this.closeModal()),this.modalOverlay&&this.modalOverlay.addEventListener("click",()=>this.closeModal()))}showLoading(){this.loadingElement&&(this.loadingElement.style.display="block"),this.errorElement&&(this.errorElement.style.display="none"),this.container&&(this.container.innerHTML=""),this.loadMoreContainer&&(this.loadMoreContainer.style.display="none")}showError(e){this.loadingElement&&(this.loadingElement.style.display="none"),this.errorElement&&(this.errorElement.style.display="block",this.errorElement.innerHTML=` ${e}`),this.container&&(this.container.innerHTML=""),this.loadMoreContainer&&(this.loadMoreContainer.style.display="none")}getHouseClass(e){return e&&{Gryffindor:"gryffindor",Slytherin:"slytherin",Hufflepuff:"hufflepuff",Ravenclaw:"ravenclaw"}[e]||""}async getCharacterImage(e){if(this.photoCache.has(e.name))return this.photoCache.get(e.name);console.log(`начали поиск для: ${e.name}`);const o=[async()=>{try{const t=await hpPhotoAPI.getCharacterPhoto(e.name);if(t)return console.log(`фото персонажа: ${e.name}`),t}catch{console.log(`персонаж не найден: ${e.name}`)}return null},async()=>{if(!e.actor||e.actor==="Unknown actor")return null;try{const t=await hpPhotoAPI.getActorPhoto(e.actor);if(t)return console.log(`есть фото: ${e.actor}`),t}catch{console.log(`актёр не найден: ${e.actor}`)}return null},async()=>(console.log(`получаем вывод инициалов: ${e.name}`),hpPhotoAPI.createGreyCircle(e.name))];for(const t of o)try{const a=await t();if(a)return this.photoCache.set(e.name,a),a}catch{continue}const n=hpPhotoAPI.createGreyCircle(e.name);return this.photoCache.set(e.name,n),n}async showCharacters(e){this.loadingElement.style.display="none",this.errorElement.style.display="none",this.container.innerHTML=`
            <div style="text-align: center; padding: 20px; color: #666;">
                loading, please wait...
            </div>
        `;const o=e.map(async t=>{const a=this.getHouseClass(t.house),s=await this.getCharacterImage(t);return`
                <div class="grid_content ${a}" data-character-name="${t.name}">
                    <div class="grid_img-container">
                        <img src="${s}" 
                             alt="${t.name}" 
                             class="grid_img">
                    </div>
                    <div class="grid_divider"></div>
                    <p class="grid_name">${t.name}</p>
                    <p class="grid_house">${t.house||"Unknown"}</p>
                    <p class="grid_actor">${t.actor||"Unknown actor"}</p>
                </div>
            `}),n=await Promise.all(o);this.container.innerHTML=n.join(""),this.addCardClickHandlers()}async showMoreCharacters(){const o=this.allCharacters.slice(this.currentIndex,this.currentIndex+this.charactersPerPage).map(async t=>{const a=this.getHouseClass(t.house),s=await this.getCharacterImage(t);return`
                <div class="grid_content ${a}" data-character-name="${t.name}">
                    <div class="grid_img-container">
                        <img src="${s}" 
                             alt="${t.name}" 
                             class="grid_img">
                    </div>
                    <div class="grid_divider"></div>
                    <p class="grid_name">${t.name}</p>
                    <p class="grid_house">${t.house||"Unknown"}</p>
                    <p class="grid_actor">${t.actor||"Unknown actor"}</p>
                </div>
            `}),n=await Promise.all(o);this.container.innerHTML+=n.join(""),this.currentIndex+=this.charactersPerPage,this.addCardClickHandlers(),this.checkIfMoreCharacters()}addCardClickHandlers(){this.container.querySelectorAll(".grid_content").forEach(e=>{e.addEventListener("click",o=>{const n=e.dataset.characterName;this.openModal(n)})})}openModal(e){const o=this.allCharacters.find(n=>n.name===e);o&&(this.fillModalWithData(o),this.modal.style.display="block",this.modalOverlay&&(this.modalOverlay.style.display="block"),document.body.style.overflow="hidden")}fillModalWithData(e){document.getElementById("modal-name").textContent=e.name,document.getElementById("modal-birth").textContent=`Date of birth: ${e.dateOfBirth||"Unknown"}`,document.getElementById("modal-patronus").textContent=`Patronus: ${e.patronus||"Unknown"}`;const o=document.getElementById("modal-wand");e.wand&&(e.wand.wood||e.wand.core||e.wand.length)?o.innerHTML=`
                <div>wood: ${e.wand.wood||"Unknown"}</div>
                <div>core: ${e.wand.core||"Unknown"}</div>
                <div>length: ${e.wand.length||"Unknown"}</div>
            `:o.innerHTML="<div>No wand information</div>";const n=document.getElementById("modal-alternate-names");e.alternate_names&&e.alternate_names.length>0?n.innerHTML=`<div>${e.alternate_names.join(", ")}</div>`:n.innerHTML="<div>No alternate names</div>",this.setModalImage(e)}async setModalImage(e){const o=document.getElementById("modal-image");let n;if(this.photoCache.has(e.name))n=this.photoCache.get(e.name);else if(e.actor&&e.actor!=="Unknown actor"&&e.actor!=="")try{const t=await wikipediaPhotoAPI.getActorPhoto(e.actor);t&&(n=t,this.photoCache.set(e.name,t))}catch(t){console.error(`ошибка википедии ${e.name}:`,t)}if(n)o.src=n;else{const t=wikipediaPhotoAPI.createGreyCircle(e.name);o.src=t}o.alt=e.name}closeModal(){this.modal&&(this.modal.style.display="none",this.modalOverlay&&(this.modalOverlay.style.display="none"),document.body.style.overflow="")}checkIfMoreCharacters(){this.currentIndex>=this.allCharacters.length?this.loadMoreContainer&&(this.loadMoreContainer.style.display="none"):this.loadMoreContainer&&(this.loadMoreContainer.style.display="block")}loadMoreCharacters(){this.loadMoreBtn&&(this.loadMoreBtn.disabled=!0,this.loadMoreBtn.textContent="Loading..."),setTimeout(()=>{this.showMoreCharacters(),this.loadMoreBtn&&(this.loadMoreBtn.disabled=!1,this.loadMoreBtn.textContent="Load More Characters")},500)}async loadAndDisplayCharacters(){this.showLoading();try{const e=await HPapi.getAllCharct();this.allCharacters=e,this.currentIndex=0,this.showCharacters(e.slice(0,this.charactersPerPage)),this.currentIndex=this.charactersPerPage,this.checkIfMoreCharacters()}catch{this.showError("Не удалось загрузить персонажей. Проверьте интернет соединение.")}}}document.addEventListener("DOMContentLoaded",function(){new r().loadAndDisplayCharacters()});
